// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat2.proto

package chat2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_acdb35e63791909c, []int{0}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type User struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_acdb35e63791909c, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MessageRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acdb35e63791909c, []int{2}
}

func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MessageReply struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageReply) Reset()         { *m = MessageReply{} }
func (m *MessageReply) String() string { return proto.CompactTextString(m) }
func (*MessageReply) ProtoMessage()    {}
func (*MessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_acdb35e63791909c, []int{3}
}

func (m *MessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageReply.Unmarshal(m, b)
}
func (m *MessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageReply.Marshal(b, m, deterministic)
}
func (m *MessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageReply.Merge(m, src)
}
func (m *MessageReply) XXX_Size() int {
	return xxx_messageInfo_MessageReply.Size(m)
}
func (m *MessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_MessageReply proto.InternalMessageInfo

func (m *MessageReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MessageReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Null)(nil), "chat2.Null")
	proto.RegisterType((*User)(nil), "chat2.User")
	proto.RegisterType((*MessageRequest)(nil), "chat2.MessageRequest")
	proto.RegisterType((*MessageReply)(nil), "chat2.MessageReply")
}

func init() { proto.RegisterFile("chat2.proto", fileDescriptor_acdb35e63791909c) }

var fileDescriptor_acdb35e63791909c = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0xce, 0x48, 0x2c,
	0x31, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xd8, 0xb8, 0x58, 0xfc,
	0x4a, 0x73, 0x72, 0x94, 0xc4, 0xb8, 0x58, 0x42, 0x8b, 0x53, 0x8b, 0x84, 0xf8, 0xb8, 0x98, 0x32,
	0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x82, 0x98, 0x32, 0x53, 0x94, 0xfc, 0xb8, 0xf8, 0x7c,
	0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xd0, 0x55, 0x08,
	0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9,
	0x42, 0x12, 0x5c, 0xec, 0xb9, 0x10, 0x5d, 0x12, 0xcc, 0x60, 0x61, 0x18, 0x57, 0xc9, 0x86, 0x8b,
	0x07, 0x6e, 0x5e, 0x41, 0x4e, 0x25, 0x5c, 0x37, 0x23, 0x76, 0xdd, 0x4c, 0x28, 0xba, 0x8d, 0x16,
	0x31, 0x72, 0xb1, 0x38, 0x67, 0x24, 0x96, 0x08, 0x59, 0x70, 0xf1, 0x04, 0xa7, 0xe6, 0xa5, 0x40,
	0x8d, 0x2a, 0x16, 0x12, 0xd5, 0x83, 0xf8, 0x0d, 0xd5, 0xad, 0x52, 0xdc, 0x50, 0x61, 0xb0, 0x17,
	0x19, 0x34, 0x18, 0x0d, 0x18, 0x85, 0x8c, 0xb9, 0xb8, 0xdd, 0x53, 0x4b, 0xe0, 0x1a, 0x61, 0x2a,
	0x40, 0x9e, 0x97, 0x12, 0x46, 0x37, 0xa5, 0x20, 0xa7, 0x52, 0x89, 0xc1, 0x80, 0x51, 0x48, 0x9b,
	0x8b, 0xd7, 0xb9, 0x28, 0x35, 0xb1, 0x24, 0xd5, 0x39, 0x23, 0x31, 0x2f, 0x2f, 0x35, 0x47, 0x08,
	0xd9, 0x60, 0x29, 0x64, 0x33, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x01, 0x6c, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x5d, 0x4e, 0x15, 0xb3, 0x6f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	SendMessages(ctx context.Context, opts ...grpc.CallOption) (Chat_SendMessagesClient, error)
	GetMessages(ctx context.Context, in *User, opts ...grpc.CallOption) (Chat_GetMessagesClient, error)
	CreateChannel(ctx context.Context, in *Null, opts ...grpc.CallOption) (*User, error)
}

type chatClient struct {
	cc grpc.ClientConnInterface
}

func NewChatClient(cc grpc.ClientConnInterface) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) SendMessages(ctx context.Context, opts ...grpc.CallOption) (Chat_SendMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat2.Chat/SendMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatSendMessagesClient{stream}
	return x, nil
}

type Chat_SendMessagesClient interface {
	Send(*MessageRequest) error
	Recv() (*Null, error)
	grpc.ClientStream
}

type chatSendMessagesClient struct {
	grpc.ClientStream
}

func (x *chatSendMessagesClient) Send(m *MessageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatSendMessagesClient) Recv() (*Null, error) {
	m := new(Null)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) GetMessages(ctx context.Context, in *User, opts ...grpc.CallOption) (Chat_GetMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[1], "/chat2.Chat/GetMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatGetMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_GetMessagesClient interface {
	Recv() (*MessageReply, error)
	grpc.ClientStream
}

type chatGetMessagesClient struct {
	grpc.ClientStream
}

func (x *chatGetMessagesClient) Recv() (*MessageReply, error) {
	m := new(MessageReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) CreateChannel(ctx context.Context, in *Null, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/chat2.Chat/CreateChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	SendMessages(Chat_SendMessagesServer) error
	GetMessages(*User, Chat_GetMessagesServer) error
	CreateChannel(context.Context, *Null) (*User, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) SendMessages(srv Chat_SendMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method SendMessages not implemented")
}
func (*UnimplementedChatServer) GetMessages(req *User, srv Chat_GetMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMessages not implemented")
}
func (*UnimplementedChatServer) CreateChannel(ctx context.Context, req *Null) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChannel not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_SendMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).SendMessages(&chatSendMessagesServer{stream})
}

type Chat_SendMessagesServer interface {
	Send(*Null) error
	Recv() (*MessageRequest, error)
	grpc.ServerStream
}

type chatSendMessagesServer struct {
	grpc.ServerStream
}

func (x *chatSendMessagesServer) Send(m *Null) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatSendMessagesServer) Recv() (*MessageRequest, error) {
	m := new(MessageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Chat_GetMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(User)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).GetMessages(m, &chatGetMessagesServer{stream})
}

type Chat_GetMessagesServer interface {
	Send(*MessageReply) error
	grpc.ServerStream
}

type chatGetMessagesServer struct {
	grpc.ServerStream
}

func (x *chatGetMessagesServer) Send(m *MessageReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_CreateChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).CreateChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat2.Chat/CreateChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).CreateChannel(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat2.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateChannel",
			Handler:    _Chat_CreateChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendMessages",
			Handler:       _Chat_SendMessages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetMessages",
			Handler:       _Chat_GetMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat2.proto",
}
