// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goodnightworld.proto

package goodnightworld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type GoodnightRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodnightRequest) Reset()         { *m = GoodnightRequest{} }
func (m *GoodnightRequest) String() string { return proto.CompactTextString(m) }
func (*GoodnightRequest) ProtoMessage()    {}
func (*GoodnightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a27943471a8d8b0a, []int{0}
}

func (m *GoodnightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodnightRequest.Unmarshal(m, b)
}
func (m *GoodnightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodnightRequest.Marshal(b, m, deterministic)
}
func (m *GoodnightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodnightRequest.Merge(m, src)
}
func (m *GoodnightRequest) XXX_Size() int {
	return xxx_messageInfo_GoodnightRequest.Size(m)
}
func (m *GoodnightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodnightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoodnightRequest proto.InternalMessageInfo

func (m *GoodnightRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type GoodnightReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodnightReply) Reset()         { *m = GoodnightReply{} }
func (m *GoodnightReply) String() string { return proto.CompactTextString(m) }
func (*GoodnightReply) ProtoMessage()    {}
func (*GoodnightReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a27943471a8d8b0a, []int{1}
}

func (m *GoodnightReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodnightReply.Unmarshal(m, b)
}
func (m *GoodnightReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodnightReply.Marshal(b, m, deterministic)
}
func (m *GoodnightReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodnightReply.Merge(m, src)
}
func (m *GoodnightReply) XXX_Size() int {
	return xxx_messageInfo_GoodnightReply.Size(m)
}
func (m *GoodnightReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodnightReply.DiscardUnknown(m)
}

var xxx_messageInfo_GoodnightReply proto.InternalMessageInfo

func (m *GoodnightReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GoodnightRequest)(nil), "goodnightworld.GoodnightRequest")
	proto.RegisterType((*GoodnightReply)(nil), "goodnightworld.GoodnightReply")
}

func init() { proto.RegisterFile("goodnightworld.proto", fileDescriptor_a27943471a8d8b0a) }

var fileDescriptor_a27943471a8d8b0a = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xcf, 0xcf, 0x4f,
	0xc9, 0xcb, 0x4c, 0xcf, 0x28, 0x29, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x43, 0x15, 0x55, 0x52, 0xe3, 0x12, 0x70, 0x87, 0x89, 0x04, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x81, 0xd9, 0x4a, 0x5a, 0x5c, 0x7c, 0x48, 0xea, 0x0a, 0x72, 0x2a, 0x85, 0x24, 0xb8, 0xd8,
	0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x61, 0x0a, 0x61, 0x5c, 0xa3, 0x78, 0x2e, 0x76, 0xf7, 0xa2,
	0xd4, 0xd4, 0x92, 0xd4, 0x22, 0xa1, 0x10, 0x2e, 0x9e, 0xe0, 0xc4, 0x4a, 0xb8, 0x4e, 0x21, 0x05,
	0x3d, 0x34, 0x57, 0xa1, 0x5b, 0x2e, 0x25, 0x87, 0x47, 0x45, 0x41, 0x4e, 0xa5, 0x12, 0x83, 0x01,
	0x63, 0x12, 0x1b, 0xd8, 0x2f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0xae, 0x2b, 0xc8,
	0xe3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SayGoodnight(ctx context.Context, in *GoodnightRequest, opts ...grpc.CallOption) (Greeter_SayGoodnightClient, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayGoodnight(ctx context.Context, in *GoodnightRequest, opts ...grpc.CallOption) (Greeter_SayGoodnightClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[0], "/goodnightworld.Greeter/SayGoodnight", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayGoodnightClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayGoodnightClient interface {
	Recv() (*GoodnightReply, error)
	grpc.ClientStream
}

type greeterSayGoodnightClient struct {
	grpc.ClientStream
}

func (x *greeterSayGoodnightClient) Recv() (*GoodnightReply, error) {
	m := new(GoodnightReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SayGoodnight(*GoodnightRequest, Greeter_SayGoodnightServer) error
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayGoodnight(req *GoodnightRequest, srv Greeter_SayGoodnightServer) error {
	return status.Errorf(codes.Unimplemented, "method SayGoodnight not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayGoodnight_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GoodnightRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayGoodnight(m, &greeterSayGoodnightServer{stream})
}

type Greeter_SayGoodnightServer interface {
	Send(*GoodnightReply) error
	grpc.ServerStream
}

type greeterSayGoodnightServer struct {
	grpc.ServerStream
}

func (x *greeterSayGoodnightServer) Send(m *GoodnightReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goodnightworld.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayGoodnight",
			Handler:       _Greeter_SayGoodnight_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "goodnightworld.proto",
}
